---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: redis-data
  namespace: NSNAME
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10G
  storageClassName: azure-file-sc
  volumeMode: Filesystem
---
apiVersion: v1
data:
  redis-stack.conf: |
    port 6379
    daemonize no
    save 60 10000
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: redis-stack-conf
  namespace: NSNAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: redis-stack
    app.kubernetes.io/component: redis-stack
    app.kubernetes.io/instance: redis-stack
    app.kubernetes.io/name: redis-stack
    app.kubernetes.io/part-of: redis-stack-app
    app.openshift.io/runtime-namespace: NSNAME
  name: redis-stack
  namespace: NSNAME
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-stack
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis-stack
        deploymentconfig: redis-stack
    spec:
      containers:
      - image: IMAGETOUSE
        imagePullPolicy: IfNotPresent
        name: redis-stack
        ports:
        - containerPort: 6379
          protocol: TCP
        - containerPort: 8001
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /redis-stack.conf
          name: redis-config
          subPath: redis-stack.conf
        - mountPath: /data
          name: redis-data
          subPath: redis-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 416
          items:
          - key: redis-stack.conf
            path: redis-stack.conf
          name: redis-stack-conf
        name: redis-config
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data
#      imagePullSecrets:
#      - name: acr-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: redis-stack
    app.kubernetes.io/component: redis-stack
    app.kubernetes.io/instance: redis-stack
    app.kubernetes.io/name: redis-stack
    app.kubernetes.io/part-of: redis-stack-app
  name: redis-stack
  namespace: NSNAME
spec:
  ports:
  - name: 6379-tcp
    port: 6379
    protocol: TCP
    targetPort: 6379
  - name: 8002-tcp
    port: 8002
    protocol: TCP
    targetPort: 8002
  selector:
    app: redis-stack
    deploymentconfig: redis-stack
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  creationTimestamp: null
  labels:
    app: redis-stack
    app.kubernetes.io/component: redis-stack
    app.kubernetes.io/instance: redis-stack
    app.kubernetes.io/name: redis-stack
    app.kubernetes.io/part-of: redis-stack-app
  name: redis-stack
  namespace: NSNAME
spec:
  host: redis-stack-NSNAME.apps.mipnpdaro.northeurope.aroapp.io
  port:
    targetPort: 6379-tcp
  to:
    kind: Service
    name: redis-stack
    weight: 100
  wildcardPolicy: None
